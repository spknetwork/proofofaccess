name: Go

on:
  push:
    tags:
      - '*'

env:
  GOOS: linux
  GOARCH: amd64

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Extract version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -o linux-main-${{ steps.get_version.outputs.VERSION }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-main-${{ steps.get_version.outputs.VERSION }}
          path: ./linux-main-${{ steps.get_version.outputs.VERSION }}

  build-windows:
    needs: build
    runs-on: windows-latest
    steps:

      - name: Extract version
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -o win-main-${{ steps.get_version.outputs.VERSION }}.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: win-main-${{ steps.get_version.outputs.VERSION }}.exe
          path: ./win-main-${{ steps.get_version.outputs.VERSION }}.exe

  build-mac:
    needs: build
    runs-on: macos-latest
    steps:

      - name: Extract version
        id: get_version
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Get dependencies
        run: go mod download

      - name: Build
        run: go build -o mac-main-${{ steps.get_version.outputs.VERSION }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-main-${{ steps.get_version.outputs.VERSION }}
          path: ./mac-main-${{ steps.get_version.outputs.VERSION }}
